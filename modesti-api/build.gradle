dependencies {
    compile "org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE"
    compile "org.springframework.data:spring-data-commons:1.12.5.RELEASE"
    compile "org.springframework.security:spring-security-core:4.1.3.RELEASE"
    compile "org.springframework.hateoas:spring-hateoas:0.20.0.RELEASE"
    compile "org.activiti:activiti-engine:5.19.0"
    compile "com.querydsl:querydsl-core:4.1.4"
    compile "cz.jirutka.rsql:rsql-parser:2.0.0"
    compile "joda-time:joda-time:2.6"
    compile "org.apache.poi:poi:3.12-beta1"
    compile "com.google.guava:guava:18.0"
    compile "org.projectlombok:lombok:1.16.12"
    compile "org.hibernate.validator:hibernate-validator:6.0.13.Final"
    
    testCompile "org.powermock:powermock-core:1.6.4"
    testCompile "org.powermock:powermock-mockito-release-full:1.6.4"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact(sourcesJar) { classifier "sources" }
            artifact(javadocJar) { classifier "javadoc" }
        }
    }
    repositories {
        maven {
            credentials {
                username artifactoryUser
                password artifactoryPassword
            }

            if (project.version.endsWith('-SNAPSHOT')) {
                url "http://artifactory/beco-development-local"
            } else {
                url "http://artifactory/beco-release-local"
            }
        }
    }
}
