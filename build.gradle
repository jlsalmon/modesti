/** Until the spring-boot plugin is included at plugins.gradle.org, we have to use the old mechanism to include it */
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.3.0.M5"
    }
}

plugins {
    id "java"
    id "maven"
    id "maven-publish"
//    id "idea"
    id "eclipse"
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.3"
}

apply plugin: "spring-boot"

group "cern.modesti"
version = "0.1-SNAPSHOT"

sourceCompatibility = 1.8
targetCompatibility = 1.8

/** Repositories used when searching for dependencies */
repositories {
    mavenCentral()
    maven { url "http://artifactory/release" }
    maven { url "http://artifactory/development" }
    maven { url "https://repo.spring.io/release" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/snapshot" }
}

dependencies {

    /*

    <orderEntry type="module-library">
      <library>
        <CLASSES>
          <root url="jar://$USER_HOME$/workspace/modesti-wincc-plugin/build/libs/modesti-wincc-plugin-0.1-SNAPSHOT.jar!/" />
        </CLASSES>
        <JAVADOC />
        <SOURCES />
      </library>
    </orderEntry>
    <orderEntry type="module-library">
      <library>
        <CLASSES>
          <root url="jar://$USER_HOME$/workspace/modesti-csam-plugin/build/libs/modesti-csam-plugin-0.1-SNAPSHOT.jar!/" />
        </CLASSES>
        <JAVADOC />
        <SOURCES />
      </library>
    </orderEntry>
    <orderEntry type="module-library">
      <library>
        <CLASSES>
          <root url="jar://$USER_HOME$/workspace/modesti-tim-plugin/build/libs/modesti-tim-plugin-0.1-SNAPSHOT.jar!/" />
        </CLASSES>
        <JAVADOC />
        <SOURCES />
      </library>
    </orderEntry>

     */

    compile "org.springframework.boot:spring-boot-starter-data-rest:1.3.0.M5"
    compile "org.springframework.boot:spring-boot-starter-data-mongodb:1.3.0.M5"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:1.3.0.M5"
    compile "org.springframework.boot:spring-boot-starter-security:1.3.0.M5"
    compile "org.springframework.boot:spring-boot-starter-mail:1.3.0.M5"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf:1.3.0.M5"
    compile "org.springframework.security:spring-security-ldap:4.0.2.RELEASE"
    compile "org.apache.directory.server:apacheds-server-jndi:1.5.5"
    compile "org.activiti:activiti-spring-boot-starter-basic:5.18.0"
    compile "org.activiti:activiti-spring-boot-starter-jpa:5.18.0"
    compile "org.activiti:activiti-ldap:5.18.0"
    compile "org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE"
    compile "org.projectlombok:lombok:1.16.4"
    compile "com.h2database:h2"
    compile "oracle:ojdbc:11.2.0.3"
    compile "mysql:mysql-connector-java:5.1.36"
    compile "commons-dbcp:commons-dbcp"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:2.6.1"
    compile "org.apache.poi:poi:3.12-beta1"
    compile "org.apache.poi:poi-ooxml:3.12-beta1"
    compile "org.apache.commons:commons-lang3:3.4"
    compile "com.google.code.gson:gson:2.3.1"
    compile "cz.jirutka.rsql:rsql-parser:2.0.0"
    compile "ch.qos.logback:logback-classic:1.1.2"
    compile "org.slf4j:slf4j-api:1.7.12"
    compile "org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16"
    compile "com.mysema.querydsl:querydsl-mongodb:3.6.6"
    compile "com.mysema.querydsl:querydsl-jpa:3.6.6"

    testCompile "cern.modesti:modesti-test:0.1.0-SNAPSHOT"
}

task wrapper(type: Wrapper) {
    gradleVersion = "2.5"
}

/** Make sure "test" profile is used for tests */
test {
    systemProperty "spring.profiles.active", "test"
}

/** Generate QueryDsl classes */
querydsl {
    library = "com.mysema.querydsl:querydsl-apt:3.6.6"
    querydslSourcesDir = "src/querydsl/java"
    springDataMongo = true
    jpa = true
}

/** Tell IDEA to find the QueryDsl generated code */
//idea {
//    module {
//        sourceDirs += file("src/querydsl/java")
//    }
//}

/**
 * Tell Spring Boot to make the JAR executable by appending a script to the JAR with
 * start/stop/restart/status commands
 */
springBoot {
//    executable = true
    layout = 'ZIP'
}

jar {
    manifest {
        attributes(
                "Loader-Path": "/opt/modesti/plugins/, /opt/modesti/conf",
        )
    }
}

bootRun.systemProperties = System.properties

/** Configure publishing to Artifactory */
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom.withXml {
                def parentNode = asNode().appendNode('parent')
                parentNode.appendNode('groupId', 'org.springframework.boot')
                parentNode.appendNode('artifactId', 'spring-boot-starter-parent')
                parentNode.appendNode('version', '1.3.0.M5')
            }
        }
    }
    repositories {
        maven {
            url "http://artifactory/beco-development-local"
            credentials {
                username artifactoryDevUser
                password artifactoryDevPassword
            }

        }
    }
}
