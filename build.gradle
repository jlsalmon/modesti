apply plugin: "java"
apply plugin: "maven"
apply plugin: "spring-boot"
apply plugin: "idea"
apply plugin: "eclipse"

group "cern.modesti"
version = "1.0-SNAPSHOT"

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    bootVersion = "1.3.0.M4"
}

sourceSets {
    generated {
        java {
            srcDir 'src/main/generated'
        }
    }
}

configurations {
    querydslapt
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://localhost:11112/release" }
    maven { url "http://repo.spring.io/release" }
    maven { url "http://repo.spring.io/milestone" }
}

dependencies {

    // TODO find a proper way of including plugins dynamically at runtime from the classpath
//    compile "cern.modesti:modesti-tim-plugin:1.0-SNAPSHOT"
    compile "cern.modesti:modesti-csam-plugin:1.0-SNAPSHOT"
//    compile "cern.modesti:modesti-wincc-plugin:1.0-SNAPSHOT"

    compile "org.springframework.boot:spring-boot-starter-data-rest:$bootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-mongodb:$bootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:$bootVersion"
    compile "org.springframework.boot:spring-boot-starter-security:$bootVersion"
    compile "org.springframework.boot:spring-boot-starter-mail:$bootVersion"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf:$bootVersion"
    compile "org.springframework.security:spring-security-ldap"
    compile "org.apache.directory.server:apacheds-server-jndi:1.5.5"
    compile "org.activiti:activiti-spring-boot-starter-basic:5.18.0"
    compile "org.activiti:activiti-spring-boot-starter-jpa:5.18.0"
    compile "org.activiti:activiti-ldap:5.18.0"
    compile "org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE"
    compile "org.projectlombok:lombok:1.16.4"
    compile "com.h2database:h2"
    compile "oracle:ojdbc:11.2.0.3"
    compile "commons-dbcp:commons-dbcp"
    compile "org.apache.poi:poi:3.12-beta1"
    compile "org.apache.poi:poi-ooxml:3.12-beta1"
    compile "org.apache.commons:commons-lang3:3.4"
    compile "com.google.code.gson:gson:2.3.1"
    compile "ch.qos.logback:logback-classic:1.1.2"
    compile "org.slf4j:slf4j-api:1.7.+"
    compile "org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16"
    compile "com.mysema.querydsl:querydsl-mongodb:3.6.6"
    querydslapt "com.mysema.querydsl:querydsl-apt:3.6.6"

    testCompile "junit:junit:4.11"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "org.springframework:spring-test:4.1.6.RELEASE"
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile "com.jayway.jsonpath:json-path"
    testCompile "com.github.fakemongo:fongo:1.6.3"
    testCompile "org.subethamail:subethasmtp:3.1.7"
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "2.3"
}

test {
    systemProperty "spring.profiles.active", "test"
}

install {
    repositories.mavenInstaller {
        pom.project {
            parent {
                groupId "org.springframework.boot"
                artifactId "spring-boot-starter-parent"
                version "$bootVersion"
            }
        }
    }
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
            "-proc:only",
            "-processor", "org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileGeneratedJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}

clean {
    delete sourceSets.generated.java.srcDirs
}

idea {
    module {
        sourceDirs += file('src/main/generated')
    }
}
